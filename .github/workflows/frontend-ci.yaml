# Clear and Unique Frontend CI Workflow

# Workflow Configuration
name: ThanhND Frontend CI Workflow

on:
  # Manual trigger using the workflow_dispatch event
  workflow_dispatch:
      
  # Automatic trigger on pull request events targeting the main branch
  pull_request:
    branches:
      - main
      
  # Scheduled trigger at 4:30 AM UTC, weekday
  schedule:
    - cron: '30 5 * * 1-5'

# Jobs Defined in the Workflow
jobs:
  lint-job:
    name: Lint Job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code From Repository
        uses: actions/checkout@v3
        # Set up the Node.js environment
      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: latest
        # Restore the npm cache to expedite the installation of dependencies.
      - name: Restore the Cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: Install Dependencies using npm
        run: cd ./starter/frontend && npm install
      - name: Verify code with Lint
        run: cd ./starter/frontend && npm run lint 

  test-job:
    name: Test Job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code From Repository
        uses: actions/checkout@v3
      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: latest
      - name: Restore the Cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: Install Dependencies using npm
        run: cd ./starter/frontend && npm install && npm ci
      - name: Run Test
        run: cd ./starter/frontend && npm run test

  build-job:
    name: Build Job
    needs: [lint-job, test-job]
    runs-on: ubuntu-latest
    steps:
        # Publish test results for later analysis
      - name: Publish Test Results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: test-results.xml
        # Build a Docker image for the frontend application
      - name: Checkout Code From Repository
        uses: actions/checkout@v3
      - name: Build Docker Image
        run: |
          cd ./starter/frontend
          docker build -t frontend . 